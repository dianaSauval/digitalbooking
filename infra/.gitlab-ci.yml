image:
  name: registry.gitlab.com/gitlab-org/terraform-images/stable:latest

variables:
  TF_ROOT: ${CI_PROJECT_DIR}/infra # The relative path to the root directory of the Terraform project
  #TF_STATE_NAME: ${TF_STATE_NAME:-default}  # The name of the state file used by the GitLab Managed Terraform state backend  # Aquí debería tener la dirección de S3
  LOCK: "Terraform"

stages:
  - format
  - validate
  - build
  - deploy
  - cleanup

cache:
  key: "${TF_ROOT}"
  paths:
    - ${TF_ROOT}/.terraform/

terraform:fmt: #&terraform_fmt
  stage: format
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform fmt
  #allow_failure: true

terraform:validate: #&terraform_validate
  stage: validate
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform validate

terraform:build: #&terraform_build
  stage: build
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform plan -var 'db_pass=$DB_PASSWORD'
    - gitlab-terraform plan-json -var 'db_pass=$DB_PASSWORD'
  resource_group: ${LOCK} # Cualquier nombre puede ir acá
  artifacts:
    paths:
      - ${TF_ROOT}/plan.cache
    reports:
      terraform: ${TF_ROOT}/plan.json

terraform:deploy:
  stage: deploy
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform apply -auto-approve
  resource_group: ${LOCK}

terraform:destroy:
  stage: cleanup
  script:
    - cd "${TF_ROOT}"
    - gitlab-terraform destroy -var 'db_pass=$DB_PASSWORD' -auto-approve
  resource_group: ${LOCK}
  when: manual
  allow_failure: true
