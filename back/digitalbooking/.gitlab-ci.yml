stages:
  - build
  - test
  - package
  - deploy

variables:
  MAVEN_OPTS: -Dmaven.repo.local=.m2/repository

cache:
  paths:
    - back/digitalbooking/.m2/repository
    - back/digitalbooking/target

build job:
  stage: build
  script:
    - cd back/digitalbooking
    - mvn compile

test job:
  stage: test
  script:
    - cd back/digitalbooking
    - mvn test #mvn clean test

package job:
  stage: package
  artifacts:
    paths:
      - back/digitalbooking/target/*.jar #target/consoleapp.jar
  script:
    - cd back/digitalbooking
    - mvn package

# deploy job:
#     stage: deploy
#     image: alpine:3.11
#     before_script:
#         - apk update && apk add openssh-client bash
#         - mkdir -p ~/.ssh
#         - eval $(ssh-agent -s)
#         - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
#         - touch ~/.ssh/config
#         - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
#         - ssh-keyscan -H $DEPLOY_SERVER_IP >> ~/.ssh/known_hosts
#     script:
#         - ssh ubuntu@DEPLOY_SERVER_IP "sudo apt-get update"
#         - ssh ubuntu@$DEPLOY_SERVER_IP "sudo apt install openjdk-8-jdk -y"
#         - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl stop consoleapp.service"
#         - scp ./target/consoleapp.jar ubuntu@$DEPLOY_SERVER_IP:~/console-app/
#         - ssh ubuntu@$DEPLOY_SERVER_IP "sudo systemctl start consoleapp.service"